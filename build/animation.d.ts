import { AnimationOptions, HookMap } from './interface';
declare class Animation {
    width: number;
    height: number;
    numPlays: number;
    actualPlays: number;
    playTime: number;
    frames: any[];
    rate: number;
    nextRenderTime: number;
    fNum: number;
    prevF: any;
    played: boolean;
    finished: boolean;
    contexts: any[];
    endFrame: number;
    startFrame: number;
    beforeHook: Function | null;
    afterHook: Function | null;
    pauseNum: number;
    manualEndNum: number;
    manualPlayNum: number;
    hookmap: HookMap;
    constructor();
    play(frameRange?: number[]): void;
    stop(): void;
    pause(frameNumber?: number): void;
    start(frameNumber?: number): void;
    before(func: Function): void;
    after(func: Function): void;
    on(hook: string, callback: Function): void;
    rewind(): void;
    private setFrameNum;
    setOptions(options: AnimationOptions): void;
    addContext(ctx: CanvasRenderingContext2D): void;
    removeContext(ctx: CanvasRenderingContext2D): void;
    private tick;
    private renderFrame;
}
export default Animation;
